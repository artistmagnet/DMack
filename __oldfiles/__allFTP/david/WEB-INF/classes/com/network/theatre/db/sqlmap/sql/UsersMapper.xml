<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.network.theatre.db.dao.UsersDAO" >
  <resultMap id="BaseResultMap" type="com.network.theatre.db.dto.UsersDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="founded_year" property="foundedYear" jdbcType="DATE" />
    <result column="password" property="password" jdbcType="CHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account_type_id" property="accountTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    id, first_name, last_name, company_name, email, birthday, founded_year, password, 
    account_name, account_type_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.network.theatre.db.dto.UsersCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitClause != null" >
      limit ${limitClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    delete from users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.network.theatre.db.dto.UsersCondition" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    delete from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.network.theatre.db.dto.UsersDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users (first_name, last_name, company_name, 
      email, birthday, founded_year, 
      password, account_name, account_type_id
      )
    values (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{foundedYear,jdbcType=DATE}, 
      #{password,jdbcType=CHAR}, #{accountName,jdbcType=VARCHAR}, #{accountTypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.network.theatre.db.dto.UsersDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="foundedYear != null" >
        founded_year,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="accountTypeId != null" >
        account_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="foundedYear != null" >
        #{foundedYear,jdbcType=DATE},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountTypeId != null" >
        #{accountTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.network.theatre.db.dto.UsersCondition" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    select count(*) from users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    update users
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.firstName != null" >
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null" >
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.foundedYear != null" >
        founded_year = #{record.foundedYear,jdbcType=DATE},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.accountName != null" >
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountTypeId != null" >
        account_type_id = #{record.accountTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    update users
    set id = #{record.id,jdbcType=INTEGER},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      founded_year = #{record.foundedYear,jdbcType=DATE},
      password = #{record.password,jdbcType=CHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_type_id = #{record.accountTypeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.network.theatre.db.dto.UsersDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    update users
    <set >
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="foundedYear != null" >
        founded_year = #{foundedYear,jdbcType=DATE},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountTypeId != null" >
        account_type_id = #{accountTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.network.theatre.db.dto.UsersDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011.
    -->
    update users
    set first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      company_name = #{companyName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      founded_year = #{foundedYear,jdbcType=DATE},
      password = #{password,jdbcType=CHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_type_id = #{accountTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertList" useGeneratedKeys="true" parameterType="java.util.List" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Aug 14 01:33:05 AMST 2011
    -->
    INSERT INTO users (first_name, last_name, company_name, email, birthday, founded_year, password, account_name, account_type_id) VALUES
    <foreach collection="recordList" item="parm" open="(" close=")" separator="),(" >
      #{parm.id}, #{parm.firstName}, #{parm.lastName}, #{parm.companyName}, #{parm.email}, #{parm.birthday}, #{parm.foundedYear}, #{parm.password}, #{parm.accountName}, #{parm.accountTypeId}
    </foreach>
  </insert>
</mapper>